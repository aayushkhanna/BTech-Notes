
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sunny
 */
public class emp extends javax.swing.JInternalFrame {

    /**
     * Creates new form emp
     */
    public emp() {
        initComponents();
        showData();
       fillData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSalary = new javax.swing.JTextField();
        txtEcode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtDob = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDoj = new javax.swing.JTextField();
        cmbDcode = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Code");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, -1, -1));

        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel3.setText("Department");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        jLabel4.setText("Salary");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        txtSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalaryActionPerformed(evt);
            }
        });
        getContentPane().add(txtSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 200, -1));

        txtEcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEcodeActionPerformed(evt);
            }
        });
        getContentPane().add(txtEcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, 200, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 200, -1));

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 510, 120));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, -1, -1));

        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });
        getContentPane().add(btnModify, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 210, -1, -1));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        jLabel5.setText("DOB");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        txtDob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDobActionPerformed(evt);
            }
        });
        getContentPane().add(txtDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 200, -1));

        jLabel6.setText("DOJ");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        txtDoj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDojActionPerformed(evt);
            }
        });
        getContentPane().add(txtDoj, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 200, -1));

        getContentPane().add(cmbDcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 200, -1));

        jButton1.setText("Send Mail");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalaryActionPerformed

    private void txtEcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEcodeActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearData();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        saveData();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        // TODO add your handling code here:
        modifyData();
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        deleteData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
       
        int row = jTable1.getSelectedRow();
        TableModel k1 = jTable1.getModel();
        String ecode = (String) k1.getValueAt(row, 0);
        String name = (String) k1.getValueAt(row, 1);
        String salary = (String) k1.getValueAt(row, 2);

        String dob = (String) k1.getValueAt(row, 5);

        String doj = (String) k1.getValueAt(row, 6);
       
	String dcode=(String) k1.getValueAt(row, 4);
	
	for(int i=0;i<cmbDcode.getItemCount();i++)
	{
		MyData m=(MyData)cmbDcode.getItemAt(i);
		String h=m.code;
		if(h.equals(dcode))
		{
		cmbDcode.setSelectedIndex(i);
		break;
		}

	}
        
        txtEcode.setText(ecode);
        txtName.setText(name);
        txtSalary.setText(salary);
txtDob.setText(dob);
txtDoj.setText(doj);     
       
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtDobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDobActionPerformed

    private void txtDojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDojActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDojActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
        SendMail.sendEmail("dhawan28sam@gmail.com", "Test Email", "This is a test email");
        }catch (Exception ex) {
            ex.printStackTrace();
               JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    void fillData()
    {
        cmbDcode.removeAllItems();
        try {
            Class.forName("oracle.jdbc.OracleDriver");
            String str = "jdbc:oracle:thin:@localhost:1521:";
            Connection x = DriverManager.getConnection(str, "jp20192", "123456");
            String q = "select * from deptt";
            PreparedStatement y = x.prepareStatement(q);
            ResultSet rs = y.executeQuery();
            MyData m1=new MyData();
            m1.code="";
            m1.name="Select Department";
            cmbDcode.addItem(m1);
            
            while(rs.next())
            {
                String code=rs.getString("dcode");
                String name=rs.getString("dname");
                
                MyData m=new MyData();
                m.code=code;
                m.name=name;
                cmbDcode.addItem(m);
            }
            
            y.close();
            x.close();
        } catch (Exception ex) {
            ex.printStackTrace();
               JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        
        }
        
    }
    
    
    void showData() {

        try {

            Vector h = new Vector();
            h.add("ECode");
            h.add("Name");
            h.add("Salary");
            h.add("Department");
            h.add("DCode");
            h.add("DOB");
            h.add("DOJ");

            Class.forName("oracle.jdbc.OracleDriver");
            String str = "jdbc:oracle:thin:@localhost:1521:";
            Connection x = DriverManager.getConnection(str, "jp20192", "123456");
            String q = "select * from employee,deptt where employee.dcode=deptt.dcode";
            PreparedStatement y = x.prepareStatement(q);
            ResultSet rs = y.executeQuery();

            Vector d = new Vector();

            String ecode, name, dob,doj,salary, dcode,dname;
            while (rs.next()) {
                ecode = rs.getString("ecode");
                name = rs.getString("name");
                salary = rs.getString("salary");
                dcode = rs.getString("dcode");
                dname = rs.getString("dname");
                dob = rs.getString("dob");
                if(dob!=null)
                {
                SimpleDateFormat f=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss.SSS");
                Date dx=f.parse(dob);
                f=new SimpleDateFormat("dd-MMM-yyyy");
                dob=f.format(dx);
                 }
                doj = rs.getString("doj");
               

                Vector r = new Vector();
                r.add(ecode);
                r.add(name);
                r.add(salary);
                r.add(dname);
                r.add(dcode);
                r.add(dob);
                r.add(doj);

                //inserted into data
                d.add(r);
            }
            y.close();
            x.close();

            DefaultTableModel z = new DefaultTableModel(d, h);
            jTable1.setModel(z);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
            ex.printStackTrace();
        }

    }
    
   
    void saveData() {
        try {
            String name, ecode, salary,  dcode, dob, doj;
            ecode = txtEcode.getText();
            name = txtName.getText();
            salary = txtSalary.getText();
            MyData k=(MyData)cmbDcode.getSelectedItem();
            dcode=k.code;
            
            dob=txtDob.getText();
            doj=txtDoj.getText();

            

            if (ecode.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "ECode Number cannot be empty");
                return;
            }
            
            if(Validation.isValidNumber(ecode)==false)
            {
                JOptionPane.showMessageDialog(this, "Plesse enter numeric roll number");
                return;
            }

            if (name.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Name cannot be empty");
                return;
            }

            if (salary.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Salary cannot be empty");
                return;
            }
            
             if (dcode.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Please select department");
                return;
            }
            
            if(Validation.isValidNumber(salary)==false)
            {
                JOptionPane.showMessageDialog(this, "Plesse enter numeric salary");
                return;
            }


            Class.forName("oracle.jdbc.OracleDriver");
            String str = "jdbc:oracle:thin:@localhost:1521:";
            Connection x = DriverManager.getConnection(str, "jp20192", "123456");

            String q = "insert into employee values(?,?,?,?,?,?)";

            PreparedStatement y = x.prepareStatement(q);

            y.setString(1, ecode);
            y.setString(3, name);
            y.setString(4, salary);
            y.setString(2, dcode);
             y.setString(5, dob);
            y.setString(6, doj);

            int n = y.executeUpdate();

            String d = n + " data inserted";

            y.close();

            x.close();

            JOptionPane.showMessageDialog(this, d);

            showData();
            clearData();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());

            ex.printStackTrace();
        }
    }

    void modifyData() {
        try {
            String name, ecode, salary,  dcode;
            ecode = txtEcode.getText();
            name = txtName.getText();
            salary = txtSalary.getText();
            MyData r=(MyData)cmbDcode.getSelectedItem();
            dcode=r.code;

            if (ecode.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "ECode Number cannot be empty");
                return;
            }

            if (name.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Name cannot be empty");
                return;
            }

            if (salary.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Salary cannot be empty");
                return;
            }

            Class.forName("oracle.jdbc.OracleDriver");
            String str = "jdbc:oracle:thin:@localhost:1521:";
            Connection x = DriverManager.getConnection(str, "jp20192", "123456");

            String q = "update employee set name=?,salary=?,dcode=? where ecode=?";

            PreparedStatement y = x.prepareStatement(q);

            y.setString(1, name);
            y.setString(2, salary);
            y.setString(3, dcode);
            y.setString(4, ecode);

            int n = y.executeUpdate();
            String d = n + " data updated";

            y.close();

            x.close();

            JOptionPane.showMessageDialog(this, d);

            showData();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());

            ex.printStackTrace();
        }
    }

    void deleteData() {
        try {
            String ecode;
            ecode = txtEcode.getText();

            if (ecode.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "ECode Number cannot be empty");
                return;
            }

            Class.forName("oracle.jdbc.OracleDriver");
            String str = "jdbc:oracle:thin:@localhost:1521:";
            Connection x = DriverManager.getConnection(str, "jp20192", "123456");

            String q = "delete from employee where ecode=?";

            PreparedStatement y = x.prepareStatement(q);

            y.setString(1, ecode);

            int n = y.executeUpdate();
            String d = n + " data deleted";

            y.close();

            x.close();

            JOptionPane.showMessageDialog(this, d);

            showData();
            clearData();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());

            ex.printStackTrace();
        }
    }

    void clearData() {
        txtEcode.setText("");
        txtName.setText("");
        txtSalary.setText("");
        //txtDcode.setText("");
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbDcode;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtDob;
    private javax.swing.JTextField txtDoj;
    private javax.swing.JTextField txtEcode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables
}
